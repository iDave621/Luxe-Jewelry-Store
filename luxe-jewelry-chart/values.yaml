# =========================================
# Luxe Jewelry Store - Helm Chart Values
# =========================================

# Global Configuration
global:
  namespace: luxe-jewelry
  imageRegistry: host.minikube.internal:8082
  imagePullPolicy: IfNotPresent

# Frontend Service Configuration
frontend:
  enabled: true
  name: frontend
  replicaCount: 2
  
  image:
    repository: host.minikube.internal:8082/luxe-jewelry-frontend
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  env:
    - name: REACT_APP_API_BASE_URL
      value: "/api"
    - name: REACT_APP_AUTH_BASE_URL
      value: "/auth"
  
  healthProbes:
    liveness:
      path: /
      port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      path: /
      port: 80
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  
  hpa:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    cpuUtilization: 70
    memoryUtilization: 80

# Backend Service Configuration
backend:
  enabled: true
  name: backend
  replicaCount: 2
  
  image:
    repository: host.minikube.internal:8082/luxe-jewelry-backend
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  env:
    - name: PORT
      value: "8000"
    - name: AUTH_SERVICE_URL
      value: "http://auth-service:8001"
    - name: PYTHONUNBUFFERED
      value: "1"
    - name: PYTHONPATH
      value: "/app"
  
  healthProbes:
    liveness:
      path: /
      port: 8000
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      path: /
      port: 8000
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  
  hpa:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    cpuUtilization: 70
    memoryUtilization: 80

# Auth Service Configuration
authService:
  enabled: true
  name: auth-service
  replicaCount: 2
  
  image:
    repository: host.minikube.internal:8082/luxe-jewelry-auth-service
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8001
    targetPort: 8001
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  env:
    - name: PORT
      value: "8001"
    - name: PYTHONUNBUFFERED
      value: "1"
    - name: PYTHONPATH
      value: "/app"
  
  # JWT Secret from Kubernetes Secret
  jwtSecretRef:
    secretName: luxe-jewelry-secrets
    key: JWT_SECRET_KEY
  
  healthProbes:
    liveness:
      path: /
      port: 8001
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      path: /
      port: 8001
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  
  hpa:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    cpuUtilization: 70
    memoryUtilization: 80

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  
  host: luxe-jewelry.local
  
  paths:
    - path: /
      pathType: Prefix
      service: frontend
      port: 80
    - path: /api
      pathType: Prefix
      service: backend
      port: 8000
    - path: /auth
      pathType: Prefix
      service: auth-service
      port: 8001

# ConfigMap Configuration
configMap:
  enabled: true
  data:
    AUTH_SERVICE_PORT: "8001"
    AUTH_SERVICE_URL: "http://auth-service:8001"
    BACKEND_PORT: "8000"
    REACT_APP_API_BASE_URL: "/api"
    REACT_APP_AUTH_BASE_URL: "/auth"
    REACT_APP_BACKEND_HOST: "backend"
    REACT_APP_BACKEND_PORT: "8000"
    PYTHONUNBUFFERED: "1"

# Image Pull Secrets
imagePullSecrets:
  - name: dockerhub-secret

# Docker Registry Secret Configuration
dockerRegistry:
  enabled: true
  name: dockerhub-secret
  # Created externally via create-docker-secret.ps1
  # Or provide values here for Helm to create it
  server: https://index.docker.io/v1/
  username: ""  # Set via --set or external secret
  password: ""  # Set via --set or external secret  
  email: ""

# JWT Secret Configuration
jwtSecret:
  enabled: true
  name: luxe-jewelry-secrets
  # JWT Secret Key - provide via --set or external secret
  jwtSecretKey: "your-secret-key-change-in-production"
